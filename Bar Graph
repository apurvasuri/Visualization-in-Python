#2a. A simple bar graph:
import matplotlib.pyplot as plt
x = [2,4,6,8,10]
y = [3,9,11,2,6]
plt.bar(x,y,label = 'Bars')
plt.xlabel('X-axis')
plt.ylabel('Y-axis')
plt.title('Bar Graph 1')
plt.legend()
plt.show()

#2b. A bar graph with two values for comparison, using different colors.
import matplotlib.pyplot as plt
x1 = [2,4,6,8,10]
y1 = [3,9,11,2,6]
x2 = [1,3,5,7,9]
y2 = [6,4,7,8,3]
plt.bar(x1,y1,label = 'Bars1', color ='purple')
plt.bar(x2,y2,label = 'Bars2', color ='pink')
plt.xlabel('X-axis')
plt.ylabel('Y-axis')
plt.title('Bar Graph2')
plt.legend()
plt.show()

"""
Some other important attributes for bar graph:
width: scalar or array-like, optional
        The width(s) of the bars(default: 0.8)
        
color: scalar or array-like, optional
        The colors of the bar faces.
        
NOTE: barh creates a horizontal bar graph. The last example using barh
"""

import matplotlib.pyplot as plt
x1 = [2,4,6,8,10]
y1 = [3,9,11,2,6]
x2 = [1,3,5,7,9]
y2 = [6,4,7,8,3]
plt.barh(x1,y1,label = 'Bars1', color ='purple')
plt.barh(x2,y2,label = 'Bars2', color ='pink')
plt.xlabel('X-axis')
plt.ylabel('Y-axis')
plt.title('Horizontal Bar Graph2')
plt.legend()
plt.show()

"""
2c. A stacked bar graph with two values for comparison, using different colors. We use the same data as above and stack the 
values of y2 above y1. For this we use the parameter 'bottom' which indicates which vale will be at the bottom. Also we use the
'arrange' method of numpy to evenly space the bars.
"""

#Stacket Bar Graph
import numpy as np
import matplotlib.pyplot as plt
y1 = [3,9,11,2,6,4]
y2 = [6,4,7,8,3,4]
x = [1,2,3,4,5,6]

plt.bar(x,y1,color='b',label='Team1')
plt.bar(x,y2,color='r',bottom=y1,label='Team2')
plt.xticks(x,('v1','v2','v3','v4','v5','v6'))

plt.xlabel('Teams')
plt.ylabel('Scores')
plt.title('Stacked Bar Graph')
plt.legend()
